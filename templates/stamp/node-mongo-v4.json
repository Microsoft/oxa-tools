{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"apiSettings": {
            "type": "object",
            "metadata": {
                "Description": "API version of the resource type"
            }
        },
        "networkSettings": {
            "type": "secureObject",
            "metadata": {
                "Description": "Network settings object"
            }
        },
		"offerType": {
			"type": "string",
			"metadata": {
				"description": "The Azure Cosmos DB API type, by default MongoDB; otherwise one of Cassandra, Gremlin, SQL, or Table"
			},
			"allowedValues": [
				"Standard"
			],
			"defaultValue": "Standard"
		},
		"apiType": {
			"type": "string",
			"metadata": {
				"description": "The Azure Cosmos DB API type, by default MongoDB; otherwise one of Cassandra, Gremlin, SQL, or Table"
			},
			"allowedValues": [
				"Cassandra",
				"Gremlin",
				"MongoDB",
				"SQL",
				"Table"
			],
			"defaultValue": "MongoDB"
		},
		"databaseName": {
			"type": "string",
			"metadata": {
				"description": "The Azure Cosmos DB name."
			}
		},
		"administratorLogin": {
			"type": "string",
			"minLength": 1,
			"metadata": {
				"description": "Database administrator login name"
			}
		},
		"administratorLoginPassword": {
			"type": "securestring",
			"minLength": 8,
			"metadata": {
				"description": "Database administrator password"
			}
		}
	},

	"resources": [
		{
			"apiVersion": "[parameters('apiSettings').documentDbApiVersion]",
			"type": "Microsoft.DocumentDB/databaseAccounts",
			"kind": "[if(equals(parameters('apiType'), 'MongoDB'), 'MongoDB', 'GlobalDocumentDB')]",
			"name": "[parameters('databaseName')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"name": "[parameters('databaseName')]",
				"databaseAccountOfferType": "[parameters('offerType')]",
				"locations": [
					{
						"locationName": "[resourceGroup().location]",
						"failoverPriority": 0
					}
				],
				"virtualNetworkRules": [
					{
						"id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('networkSettings').virtualNetworkName, parameters('networkSettings').subnetName)]"
					}
				]
			}
		}
	]
}